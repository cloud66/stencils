apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-event-relay
  namespace: c66-system
  labels:
    app: k8s-event-relay
spec:
  revisionHistoryLimit: 0
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  selector:
    matchLabels:
      app: k8s-event-relay
  template:
    metadata:
      labels:
        app: k8s-event-relay
      annotations:
        # Mark this pod as a critical add-on; when enabled, the critical add-on scheduler
        # reserves resources for critical add-on pods so that they can be rescheduled after
        # a failure.  This annotation works in tandem with the toleration below.
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      tolerations:
        # This taint is set by all kubelets running `--cloud-provider=external`
        # so we should tolerate it to schedule this pod
        - key: node.cloudprovider.kubernetes.io/uninitialized
          value: "true"
          effect: NoSchedule
        # Allow this pod to run on the master
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        # Allow this pod to be rescheduled while the node is in "critical add-ons only" mode
        # This, along with the annotation above marks this pod as a critical add-on
        - key: CriticalAddonsOnly
          operator: Exists
      nodeSelector:
        # Only run this pod on masters
        node-role.kubernetes.io/master: ""
      serviceAccountName: c66-user
      containers:
        - name: k8s-event-relay
          imagePullPolicy: IfNotPresent
          image: cloud66/k8s-event-relay:4.0.0
          command: ["k8s-event-relay"]
          args:
            - "--upstream-host=${account.cloud66_address}"
            - "--log=STDOUT"
            - "--log-level=info"
            - "--api=${account.api_key}"
